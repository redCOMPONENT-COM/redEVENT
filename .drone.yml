clone:
 default:
   image: plugins/git
   recursive: false

pipeline:
  00-cache:
    group: 00-setup
    image: redwebaps/redevent-cache:dev
    pull: true
    commands:
      # redEVENT Composer cache
      - mv /opt/cache/redEVENT/vendor tests/
      - touch tests/.cache.composer.tmp
      # redEVENT npm cache
      - mv /opt/cache/redEVENT/node_modules build/
      - touch tests/.cache.npm.tmp
      # Joomla CMS
      # - mv /opt/cache/joomla-cms tests
      # - touch tests/.cache.joomla-cms.tmp

      # redCORE
      - mkdir -p tests/extension/redCORE
      - gpg --pinentry-mode loopback --passphrase "6f8f19c330a0f899458e4b0670824deb8cdfe391" -o /opt/cache/redCORE.tgz --decrypt /opt/cache/redCORE.tgz.gpg
      - tar -xzf /opt/cache/redCORE.tgz -C tests/extension/redCORE
      - touch tests/.cache.redCORE.tmp

      # redFORM
      - mkdir -p tests/extension/redFORM
      - gpg --pinentry-mode loopback --passphrase "6f8f19c330a0f899458e4b0670824deb8cdfe391" -o /opt/cache/redFORM.tgz --decrypt /opt/cache/redFORM.tgz.gpg
      - tar -xzf /opt/cache/redFORM.tgz -C tests/extension/redFORM
      - touch tests/.cache.redFORM.tmp

  00-setup:
    group: 00-setup
    image: redwebaps/chromedriver:79.0
    pull: true
    commands:
      # Composer setup
      - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done            # Comment if not using composer cache
      - composer config -g github-oauth.github.com 4281d0ba7e8f1caded4c8b949a1c115902e30113
      # - composer install --prefer-dist                                      # Uncomment if not using composer cache
      # NPM setup
      - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done                 # Comment if not using npm cache
      # redEVENT installer release
      - cd build
      - mv gulp-config.json.dist gulp-config.json
      - gulp release --skip-version testsRelease
      - cd ../tests/extension/redCORE/build
      - cp gulp-config.json.dist gulp-config.json
      - gulp release --skip-version
      - cd ../../../
      - cp extension/redCORE/tests/releases/redCORE.zip releases/
      - cd releases
      - cd ../
      # Codeception setup
      - cp acceptance.suite.yml.dist.drone acceptance.suite.yml
      # Test setup
      # - cd ../
      # - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done         # Comment if not using Joomla CMS cache
      - vendor/bin/robo tests:site-preparation 0 0
      # Ownership for uid 82
      - cd ../
      - chown -R www-data:www-data .
      # Touching temp file to start the setup of each installation (in each PHP version - via services)
      - touch tests/.setup.tmp

  00-setup-56:
    group: 00-setup
    image: redwebaps/chromedriver:79.0
    pull: true
    environment:
    - tests_user=admin
    - tests_suite=00-setup
    - tests_db=setup
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-00-setup
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &

    # Waiting for setup to be done
    - while [ ! -f tests/.setup.tmp ]; do sleep 1; done

    # Creating first clone for tests setup
    - mkdir -p tests/$tests_suite$php_version/joomla-cms
    - rsync -a tests/joomla-cms/ tests/$tests_suite$php_version/joomla-cms
    # Creates the database (required because of the Codeception Db module)
    - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db$php_version"
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs the setup and installation routine
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:setup 0 0'
    # Touching temp file to start the environment cloning (see setup-stages service)
    - cd ../
    - touch tests/.setup$php_version.tmp

  00-setup-73:
    group: 00-setup
    image: redwebaps/chromedriver:79.0
    pull: true
    environment:
    - tests_user=admin
    - tests_suite=00-setup
    - tests_db=setup
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-00-setup
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &

    # Waiting for setup to be done
    - while [ ! -f tests/.setup.tmp ]; do sleep 1; done

    # Creating first clone for tests setup
    - mkdir -p tests/$tests_suite$php_version/joomla-cms
    - rsync -a tests/joomla-cms/ tests/$tests_suite$php_version/joomla-cms
    # Creates the database (required because of the Codeception Db module)
    - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db$php_version"
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs the setup and installation routine
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:setup 0 0'
    # Touching temp file to start the environment cloning (see setup-stages service)
    - cd ../
    - touch tests/.setup$php_version.tmp

  00-setup-stages:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_suite=00-setup
    - tests_db=setup
    - php_versions=56,73
    commands:
    # Base installation
    - sh tests/drone/setup-base-install.sh  $tests_db                       $tests_suite                        $php_versions
    # Stages setup
    - sh tests/drone/setup-stages.sh        "Group1"                        "01-Group1"                         $php_versions
    - sh tests/drone/setup-stages.sh        "Group2"                        "02-Group2"                         $php_versions
    - sh tests/drone/setup-stages.sh        "Group3"                        "03-Group3"                         $php_versions
    - sh tests/drone/setup-stages.sh        "Group4"                        "04-Group4"                         $php_versions
    - sh tests/drone/setup-stages.sh        "Group5"                        "05-Group5"                         $php_versions

  01-Group1-56:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=01-Group1
    - tests_db=Group1
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-01-Group1
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator 0 0'

  01-Group1-73:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=01-Group1
    - tests_db=Group1
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-01-Group1
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator 0 0'

  02-Group2-56:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=02-Group2
    - tests_db=Group2
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-02-Group2
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/RegistrationsEvent 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/DetailsFixed 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/VenueSubmission 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/uninstall/ 0 0'

  02-Group2-73:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=02-Group2
    - tests_db=Group2
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-02-Group2
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/RegistrationsEvent 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/DetailsFixed 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/VenueSubmission 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/uninstall/ 0 0'

  03-Group3-56:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=03-Group3
    - tests_db=Group3
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-03-Group3
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/UpcomingEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/UpcomingVenue 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/SearchEvents 0 0'

  03-Group3-73:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=03-Group3
    - tests_db=Group3
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-03-Group3
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/UpcomingEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/UpcomingVenue 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/SearchEvents 0 0'

  04-Group4-56:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=04-Group4
    - tests_db=Group4
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-04-Group4
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/FeaturedEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/CalendarViewEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Session 0 0'

  04-Group4-73:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=04-Group4
    - tests_db=Group4
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-04-Group4
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/FeaturedEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/CalendarViewEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Session 0 0'

  05-Group5-56:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=05-Group5
    - tests_db=Group5
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-05-Group5
    - php_version=56
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/CategoryEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Events 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/VenueCategories 0 0'

  05-Group5-73:
    group: tests
    image: redwebaps/chromedriver:79.0
    environment:
    - tests_user=admin
    - tests_suite=05-Group5
    - tests_db=Group5
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-05-Group5
    - php_version=73
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
    # Waits until Chromedriver is up and running
    - while ! nc -z localhost 9515; do sleep 1; done
    # Performs test
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/CategoryEvents 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Events 0 0'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/VenueCategories 0 0'

  slack:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: redevent
    when:
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        {{repo.name}} PR #{{build.pull}} succeeded in {{since build.started}}. Good job {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
      {{else}}
        {{repo.name}} PR #{{build.pull}} failed in {{since build.started}}. Fix me please {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
      {{/success}}

  error-report:
    image: redwebaps/chromedriver:79.0
    commands:
      - if [ -z "${CI_PULL_REQUEST}" ]; then export CI_PULL_REQUEST=1; fi
      - cd tests
      - vendor/bin/robo send:build-report-error-slack redcomponent 365447364384436 Q94UM5kjZkZIrau8MIL93m0dN6U "$CI_REPO" "$CI_PULL_REQUEST" "https://hooks.slack.com/services/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" "#redevent" "$CI_BUILD_URL"
    when:
      status: [ failure ]

services:
  db:
    image: mysql/mysql-server:5.7
    pull: true
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_ROOT_HOST=%

  php56:
    image: redwebaps/php-apache:5.6
    pull: true
    environment:
    - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
    - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1

  php73:
    image: redwebaps/php-apache:7.3
    pull: true
    environment:
    - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
    - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1

branches:
  exclude: [ crowdin ]
